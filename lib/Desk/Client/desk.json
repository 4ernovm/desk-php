{
    "name": "Desk.com",
    "description": "",
    "apiVersion": 2,
    "operations": {
        "embeddable": {
            "responseType": "model",
            "parameters": {
                "embed": {
                    "description": "Which relationships should be embedded in the response",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string",
                        "enum": ["none"]
                    },
                    "location": "query"
                }
            }
        },
        "list": {
            "extends": "embeddable",
            "httpMethod": "GET",
            "parameters": {
                "per_page": {
                    "description": "Number of entries returned per page",
                    "type": "integer",
                    "minimum": 1,
                    "location": "query"
                },
                "page": {
                    "description": "The page number of results to retrieve",
                    "type": "integer",
                    "minimum": 1,
                    "location": "query"
                }
            }
        },
        "show": {
            "extends": "embeddable",
            "httpMethod": "GET"
        },
        "show.main": {
            "extends": "show",
            "parameters": {
                "id": {"extends": "id", "required": "true", "location": "uri"}
            }
        },
        "create": {
            "httpMethod": "POST",
            "parameters": {
                "content_type": {
                    "default": "application/json",
                    "location": "header",
                    "sentAs": "Content-Type"
                }
            }
        },
        "delete": {
            "httpMethod": "DELETE",
            "class": "Desk\\Command\\NullResponseCommand",
            "responseType": "primitive",
            "responseClass": "null"
        },
        "delete.main": {
            "extends": "delete",
            "parameters": {
                "id": {"extends": "id", "required": "true", "location": "uri"}
            }
        },




        "ListArticles": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all articles",
            "uri": "articles",
            "responseClass": "ArticlesPage"
        },
        "ListCases": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all cases",
            "uri": "cases",
            "responseClass": "CasesPage"
        },
        "ListCompanies": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all companies",
            "uri": "companies",
            "responseClass": "CompaniesPage"
        },
        "ListCustomFields": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all custom fields",
            "uri": "custom_fields",
            "responseClass": "CustomFieldsPage"
        },
        "ListCustomers": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all customers",
            "uri": "customers",
            "responseClass": "CustomersPage"
        },
        "ListFilters": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all filters",
            "uri": "filters",
            "responseClass": "FiltersPage"
        },
        "ListGroups": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all groups",
            "uri": "groups",
            "responseClass": "GroupsPage"
        },
        "ListIntegrationUrls": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all integration URLs",
            "uri": "integration_urls",
            "responseClass": "IntegrationUrlsPage"
        },
        "ListMacros": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all macros",
            "uri": "macros",
            "responseClass": "MacrosPage"
        },
        "ListTopics": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all topics",
            "uri": "topics",
            "responseClass": "TopicsPage"
        },
        "ListUsers": {
            "extends": "list",
            "summary": "Retrieve a paginated list of all users",
            "uri": "users",
            "responseClass": "UsersPage"
        },


        "ListArticleTranslations": {
            "extends": "list",
            "summary": "Retrieve a paginated list of translations for a particular article",
            "uri": "articles/{article_id}/translations",
            "responseClass": "ArticleTranslationsPage",
            "parameters": {
                "article_id": {
                    "extends": "id",
                    "description": "The ID of the article to retrieve translations for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "ArticleTranslationModel"
                    }
                }
            }
        },
        "ListCaseReplies": {
            "extends": "list",
            "summary": "Retrieve a paginated list of replies for a particular case",
            "uri": "cases/{case_id}/replies",
            "responseClass": "CaseRepliesPage",
            "parameters": {
                "case_id": {
                    "extends": "id",
                    "description": "The ID of the case to retrieve replies for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "CaseReplyModel"
                    }
                }
            }
        },
        "ListCaseNotes": {
            "extends": "list",
            "summary": "Retrieve a paginated list of notes for a particular case",
            "uri": "cases/{case_id}/notes",
            "responseClass": "CaseNotesPage",
            "parameters": {
                "case_id": {
                    "extends": "id",
                    "description": "The ID of the case to retrieve notes for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "CaseNoteModel"
                    }
                }
            }
        },
        "ListCompanyCustomers": {
            "extends": "list",
            "summary": "Retrieve a paginated list of customers for a particular company",
            "uri": "companies/{company_id}/customers",
            "responseClass": "CompanyCustomersPage",
            "parameters": {
                "company_id": {
                    "extends": "id",
                    "description": "The ID of the company to retrieve customers for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "CustomerModel"
                    }
                }
            }
        },
        "ListCustomerCases": {
            "extends": "list",
            "summary": "Retrieve a paginated list of cases for a particular customer",
            "uri": "customers/{customer_id}/cases",
            "responseClass": "CustomerCasesPage",
            "parameters": {
                "customer_id": {
                    "extends": "id",
                    "description": "The ID of the customer to retrieve cases for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "CaseModel"
                    }
                }
            }
        },
        "ListFilterCases": {
            "extends": "list",
            "summary": "Retrieve a paginated list of cases for a particular filter",
            "uri": "filters/{filter_id}/cases",
            "responseClass": "FilterCasesPage",
            "parameters": {
                "filter_id": {
                    "extends": "id",
                    "description": "The ID of the filter to retrieve cases for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "CaseModel"
                    }
                }
            }
        },
        "ListGroupFilters": {
            "extends": "list",
            "summary": "Retrieve a paginated list of filters for a particular group",
            "uri": "groups/{group_id}/filters",
            "responseClass": "GroupFiltersPage",
            "parameters": {
                "group_id": {
                    "extends": "id",
                    "description": "The ID of the group to retrieve filters for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "FilterModel"
                    }
                }
            }
        },
        "ListGroupUsers": {
            "extends": "list",
            "summary": "Retrieve a paginated list of users for a particular group",
            "uri": "groups/{group_id}/users",
            "responseClass": "GroupUsersPage",
            "parameters": {
                "group_id": {
                    "extends": "id",
                    "description": "The ID of the group to retrieve users for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "UserModel"
                    }
                }
            }
        },
        "ListMacroActions": {
            "extends": "list",
            "summary": "Retrieve a paginated list of actions for a particular macro",
            "uri": "macros/{macro_id}/actions",
            "responseClass": "MacroActionsPage",
            "parameters": {
                "macro_id": {
                    "extends": "id",
                    "description": "The ID of the macro to retrieve actions for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "MacroActionModel"
                    }
                }
            }
        },
        "ListTopicArticles": {
            "extends": "list",
            "summary": "Retrieve a paginated list of articles for a particular topic",
            "uri": "topics/{topic_id}/articles",
            "responseClass": "TopicArticlesPage",
            "parameters": {
                "topic_id": {
                    "extends": "id",
                    "description": "The ID of the topic to retrieve articles for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "ArticleModel"
                    }
                }
            }
        },
        "ListTopicTranslations": {
            "extends": "list",
            "summary": "Retrieve a paginated list of translations for a particular topic",
            "uri": "topics/{topic_id}/translations",
            "responseClass": "TopicTranslationsPage",
            "parameters": {
                "topic_id": {
                    "extends": "id",
                    "description": "The ID of the topic to retrieve translations for",
                    "required": "true",
                    "location": "uri"
                }
            },
            "data": {
                "embeds": {
                    "entries": {
                        "model": "TopicTranslationModel"
                    }
                }
            }
        },




        "SearchArticles": {
            "extends": "list",
            "summary": "Search public articles with pagination",
            "uri": "articles/search",
            "responseClass": "SearchArticlesPage",
            "parameters": {
                "text": {
                    "description": "Search terms -- will search across subject, body_text, keywords, question, and answer fields",
                    "type": "string",
                    "location": "query"
                },
                "topic_ids": {
                    "description": "Topic IDs to filter results by",
                    "type": "array",
                    "items": {"extends": "id"},
                    "location": "query"
                }
            }
        },
        "SearchCases": {
            "extends": "list",
            "summary": "Search cases based on a combination of parameters with pagination",
            "uri": "cases/search",
            "responseClass": "SearchCasesPage",
            "parameters": {
                "name": {
                    "description": "Search for cases from customers with particular names",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "first_name": {
                    "description": "Search for cases from customers with particular first names",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "last_name": {
                    "description": "Search for cases from customers with particular last names",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "email": {
                    "description": "Search for cases from customers with particular email addresses",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "phone": {
                    "description": "Search for cases from customers with particular phone numbers",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "company": {
                    "description": "Search for cases from customers with particular company names",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "twitter": {
                    "description": "Search for cases from customers with particular twitter handles",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "labels": {
                    "extends": "labels",
                    "description": "Search for cases from customers with particular labels",
                    "location": "query"
                },
                "case_id": {
                    "description": "Case IDs to filter by",
                    "type": "array",
                    "items": {"extends": "id"},
                    "location": "query"
                },
                "subject": {
                    "description": "Case subject to search for",
                    "type": "string",
                    "location": "query"
                },
                "description": {
                    "description": "Case description to search for",
                    "type": "string",
                    "location": "query"
                },
                "status": {
                    "description": "Case statuses to filter by",
                    "type": "array",
                    "items": {"extends": "status"},
                    "location": "query"
                },
                "priority": {
                    "description": "Case priorities to filter by",
                    "type": "array",
                    "items": {"extends": "priority"},
                    "location": "query"
                },
                "assigned_group": {
                    "description": "Assigned group name to filter by",
                    "type": "string",
                    "location": "query"
                },
                "assigned_user": {
                    "description": "Assigned user name to filter by",
                    "type": "string",
                    "location": "query"
                },
                "channels": {
                    "description": "Case channel types to filter by",
                    "type": "array",
                    "items": {"extends": "channel"},
                    "location": "query"
                },
                "notes": {
                    "description": "Case notes to search for",
                    "type": "string",
                    "location": "query"
                },
                "attachments": {
                    "description": "Case attachment file names to search for",
                    "type": "string",
                    "location": "query"
                },
                "created": {
                    "extends": "interval",
                    "description": "Creation date range to filter by",
                    "location": "query"
                },
                "updated": {
                    "extends": "interval",
                    "description": "Updated date range to filter by",
                    "location": "query"
                },
                "since_created_at": {
                    "extends": "date.input",
                    "description": "Search for cases created more recently than a particular date",
                    "location": "query"
                },
                "max_created_at": {
                    "extends": "date.input",
                    "description": "Search for cases created on or before a particular date",
                    "location": "query"
                },
                "since_updated_at": {
                    "extends": "date.input",
                    "description": "Search for cases updated more recently than a particular date",
                    "location": "query"
                },
                "max_updated_at": {
                    "extends": "date.input",
                    "description": "Search for cases updated on or before a particular date",
                    "location": "query"
                },
                "since_id": {
                    "extends": "id",
                    "description": "Search for cases with an ID greater than a particular ID",
                    "location": "query"
                },
                "max_id": {
                    "extends": "id",
                    "description": "Search for cases with an ID less than or equal to a particular ID",
                    "location": "query"
                }
            }
        },
        "SearchCustomers": {
            "extends": "list",
            "summary": "Search customers based on a combination of parameters with pagination",
            "uri": "customers/search",
            "responseClass": "SearchCustomersPage",
            "parameters": {
                "first_name": {
                    "description": "Customer's first name to search for",
                    "type": "string",
                    "location": "query"
                },
                "last_name": {
                    "description": "Customer's last name to search for",
                    "type": "string",
                    "location": "query"
                },
                "full_name": {
                    "description": "Customer's first and last name (concatenated) to search for",
                    "type": "string",
                    "location": "query"
                },
                "since_created_at": {
                    "extends": "date.input",
                    "description": "Search for customers created more recently than a particular date",
                    "location": "query"
                },
                "max_created_at": {
                    "extends": "date.input",
                    "description": "Search for customers created on or before a particular date",
                    "location": "query"
                },
                "since_updated_at": {
                    "extends": "date.input",
                    "description": "Search for customers updated more recently than a particular date",
                    "location": "query"
                },
                "max_updated_at": {
                    "extends": "date.input",
                    "description": "Search for customers updated on or before a particular date",
                    "location": "query"
                },
                "since_id": {
                    "extends": "id",
                    "description": "Search for customers with an ID greater than a particular ID",
                    "location": "query"
                },
                "max_id": {
                    "extends": "id",
                    "description": "Search for customers with an ID less than or equal to a particular ID",
                    "location": "query"
                },
                "email": {
                    "description": "Customer's email address to search for",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "twitter": {
                    "description": "Customer's twitter handle to search for",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "phone": {
                    "description": "Customer's phone number to search for",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                },
                "external_id": {
                    "description": "Customer's external ID to search for",
                    "type": "array",
                    "items": {"type": "string"},
                    "location": "query"
                }
            }
        },




        "ShowArticle": {
            "extends": "show.main",
            "summary": "Retrieve a single article by ID",
            "uri": "articles/{id}",
            "responseClass": "ArticleModel"
        },
        "ShowCase": {
            "extends": "show.main",
            "summary": "Retrieve a single case by ID",
            "uri": "cases/{id}",
            "responseClass": "CaseModel"
        },
        "ShowCompany": {
            "extends": "show.main",
            "summary": "Retrieve a single company by ID",
            "uri": "companies/{id}",
            "responseClass": "CompanyModel"
        },
        "ShowCustomField": {
            "extends": "show.main",
            "summary": "Retrieve a single custom field by ID",
            "uri": "custom_fields/{id}",
            "responseClass": "CustomFieldModel"
        },
        "ShowCustomer": {
            "extends": "show.main",
            "summary": "Retrieve a single customer by ID",
            "uri": "customers/{id}",
            "responseClass": "CustomerModel"
        },
        "ShowFilter": {
            "extends": "show.main",
            "summary": "Retrieve a single filter by ID",
            "uri": "filters/{id}",
            "responseClass": "FilterModel"
        },
        "ShowGroup": {
            "extends": "show.main",
            "summary": "Retrieve a single group by ID",
            "uri": "groups/{id}",
            "responseClass": "GroupModel"
        },
        "ShowIntegrationUrl": {
            "extends": "show.main",
            "summary": "Retrieve a single integration URL by ID",
            "uri": "integration_urls/{id}",
            "responseClass": "IntegrationUrlModel"
        },
        "ShowMacro": {
            "extends": "show.main",
            "summary": "Retrieve a single macro by ID",
            "uri": "macros/{id}",
            "responseClass": "MacroModel"
        },
        "ShowTopic": {
            "extends": "show.main",
            "summary": "Retrieve a single topic by ID",
            "uri": "topics/{id}",
            "responseClass": "TopicModel"
        },
        "ShowUser": {
            "extends": "show.main",
            "summary": "Retrieve a single user by ID",
            "uri": "users/{id}",
            "responseClass": "UserModel"
        },


        "ShowInsightMeta": {
            "extends": "show",
            "summary": "Retrieve insights meta data for the authenticated site",
            "uri": "insights/meta",
            "responseClass": "InsightMetaModel"
        },


        "ShowArticleTranslation": {
            "extends": "show",
            "summary": "Retrieve a single article translation by article ID and locale",
            "uri": "articles/{article_id}/translations/{locale}",
            "responseClass": "ArticleTranslationModel",
            "parameters": {
                "article_id": {
                    "extends": "id",
                    "description": "The ID of the article to retrieve the translation for",
                    "required": "true",
                    "location": "uri"
                },
                "locale": {
                    "extends": "locale",
                    "description": "The locale of the translation to retrieve",
                    "required": true,
                    "location": "uri"
                }
            }
        },
        "ShowCaseMessage": {
            "extends": "show",
            "summary": "Retrieve the original message for a particular case",
            "uri": "cases/{case_id}/message",
            "responseClass": "CaseMessageModel",
            "parameters": {
                "case_id": {"extends": "id", "required": "true", "location": "uri"}
            }
        },
        "ShowCaseReply": {
            "extends": "show",
            "summary": "Retrieve a single case reply by case ID and reply ID",
            "uri": "cases/{case_id}/replies/{reply_id}",
            "responseClass": "CaseReplyModel",
            "parameters": {
                "case_id": {"extends": "id", "required": "true", "location": "uri"},
                "reply_id": {"extends": "id", "required": "true", "location": "uri"}
            }
        },
        "ShowCaseNote": {
            "extends": "show",
            "summary": "Retrieve a single private case note by case ID and note ID",
            "uri": "cases/{case_id}/notes/{note_id}",
            "responseClass": "CaseNoteModel",
            "parameters": {
                "case_id": {"extends": "id", "required": "true", "location": "uri"},
                "note_id": {"extends": "id", "required": "true", "location": "uri"}
            }
        },
        "ShowMacroAction": {
            "extends": "show",
            "summary": "Retrieve a single macro action by macro ID and action ID",
            "uri": "macros/{macro_id}/actions/{action_id}",
            "responseClass": "MacroActionModel",
            "parameters": {
                "macro_id": {"extends": "id", "required": "true", "location": "uri"},
                "action_id": {"extends": "id", "required": "true", "location": "uri"}
            }
        },
        "ShowTopicTranslation": {
            "extends": "show",
            "summary": "Retrieve a single topic translation by article ID and locale",
            "uri": "topics/{topic_id}/translations/{locale}",
            "responseClass": "TopicTranslationModel",
            "parameters": {
                "topic_id": {
                    "extends": "id",
                    "description": "The ID of the topic to retrieve the translation for",
                    "required": "true",
                    "location": "uri"
                },
                "locale": {
                    "extends": "locale",
                    "description": "The locale of the translation to retrieve",
                    "required": true,
                    "location": "uri"
                }
            }
        },




        "DeleteArticle": {
            "extends": "delete.main",
            "summary": "Delete a single article by ID",
            "uri": "articles/{id}"
        },
        "DeleteIntegrationUrl": {
            "extends": "delete.main",
            "summary": "Delete a single integration URL by ID",
            "uri": "integration_urls/{id}"
        },
        "DeleteMacro": {
            "extends": "delete.main",
            "summary": "Delete a single macro by ID",
            "uri": "macros/{id}"
        },
        "DeleteTopic": {
            "extends": "delete.main",
            "summary": "Delete a single topic by ID",
            "uri": "topics/{id}"
        },


        "DeleteTopicTranslation": {
            "extends": "delete",
            "summary": "Delete a single topic translation by topic ID and locale",
            "uri": "topics/{topic_id}/translations/{locale}",
            "parameters": {
                "topic_id": {
                    "extends": "id",
                    "description": "The ID of the topic to delete the translation from",
                    "required": "true",
                    "location": "uri"
                },
                "locale": {
                    "extends": "locale",
                    "description": "The locale of the translation to delete",
                    "required": true,
                    "location": "uri"
                }
            }
        }
    },
    "models": {
        "channel": {
            "type": "string",
            "enum": ["chat", "twitter", "email", "qna", "facebook", "phone"]
        },
        "custom_fields": {
            "type": "object",
            "additionalProperties": "true"
        },
        "date.output": {
            "type": "string",
            "filters": "Desk\\Filter\\Date::stringToObject"
        },
        "date.input": {
            "type": "object",
            "instanceOf": "DateTime",
            "filters": "Desk\\Filter\\Date::objectToTimestamp"
        },
        "interval": {
            "type": "string",
            "enum": ["today", "yesterday", "week", "month", "year"]
        },
        "id": {
            "type": "integer",
            "minimum": 1
        },
        "labels": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "locale": {
            "type": "string"
        },
        "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
        },
        "status": {
            "type": "string",
            "enum": ["new", "open", "pending", "resolved", "closed"]
        },




        "page": {
            "type": "object",
            "properties": {
                "total_entries": {
                    "description": "Total number of entries on all pages of the result",
                    "type": "integer",
                    "location": "json"
                }
            }
        },




        "ArticlesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "ArticleModel"
                    },
                    "self": {
                        "operation": "ListArticles",
                        "pattern": "#/articles\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListArticles",
                        "pattern": "#/articles\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListArticles",
                        "pattern": "#/articles\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListArticles",
                        "pattern": "#/articles\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListArticles",
                        "pattern": "#/articles\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CasesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CaseModel"
                    },
                    "self": {
                        "operation": "ListCases",
                        "pattern": "#/cases\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCases",
                        "pattern": "#/cases\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCases",
                        "pattern": "#/cases\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCases",
                        "pattern": "#/cases\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCases",
                        "pattern": "#/cases\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CompaniesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CompanyModel"
                    },
                    "self": {
                        "operation": "ListCompanies",
                        "pattern": "#/companies\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCompanies",
                        "pattern": "#/companies\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCompanies",
                        "pattern": "#/companies\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCompanies",
                        "pattern": "#/companies\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCompanies",
                        "pattern": "#/companies\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CustomFieldsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CustomFieldModel"
                    },
                    "self": {
                        "operation": "ListCustomFields",
                        "pattern": "#/custom_fields\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCustomFields",
                        "pattern": "#/custom_fields\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCustomFields",
                        "pattern": "#/custom_fields\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCustomFields",
                        "pattern": "#/custom_fields\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCustomFields",
                        "pattern": "#/custom_fields\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CustomersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CustomerModel"
                    },
                    "self": {
                        "operation": "ListCustomers",
                        "pattern": "#/customers\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCustomers",
                        "pattern": "#/customers\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCustomers",
                        "pattern": "#/customers\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCustomers",
                        "pattern": "#/customers\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCustomers",
                        "pattern": "#/customers\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "FiltersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "FilterModel"
                    },
                    "self": {
                        "operation": "ListFilters",
                        "pattern": "#/filters\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListFilters",
                        "pattern": "#/filters\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListFilters",
                        "pattern": "#/filters\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListFilters",
                        "pattern": "#/filters\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListFilters",
                        "pattern": "#/filters\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "GroupsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "GroupModel"
                    },
                    "self": {
                        "operation": "ListGroups",
                        "pattern": "#/groups\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListGroups",
                        "pattern": "#/groups\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListGroups",
                        "pattern": "#/groups\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListGroups",
                        "pattern": "#/groups\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListGroups",
                        "pattern": "#/groups\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "IntegrationUrlsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "IntegrationUrlModel"
                    },
                    "self": {
                        "operation": "ListIntegrationUrls",
                        "pattern": "#/integration_urls\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListIntegrationUrls",
                        "pattern": "#/integration_urls\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListIntegrationUrls",
                        "pattern": "#/integration_urls\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListIntegrationUrls",
                        "pattern": "#/integration_urls\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListIntegrationUrls",
                        "pattern": "#/integration_urls\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "MacrosPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "MacroModel"
                    },
                    "self": {
                        "operation": "MacroModel",
                        "pattern": "#/macros\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "MacroModel",
                        "pattern": "#/macros\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "MacroModel",
                        "pattern": "#/macros\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "MacroModel",
                        "pattern": "#/macros\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "MacroModel",
                        "pattern": "#/macros\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "TopicsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "TopicModel"
                    },
                    "self": {
                        "operation": "ListTopics",
                        "pattern": "#/topics\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListTopics",
                        "pattern": "#/topics\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListTopics",
                        "pattern": "#/topics\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListTopics",
                        "pattern": "#/topics\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListTopics",
                        "pattern": "#/topics\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "UsersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "UserModel"
                    },
                    "self": {
                        "operation": "ListUsers",
                        "pattern": "#/users\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListUsers",
                        "pattern": "#/users\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListUsers",
                        "pattern": "#/users\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListUsers",
                        "pattern": "#/users\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListUsers",
                        "pattern": "#/users\\??(?P<_query>.*)$#"
                    }
                }
            }
        },




        "ArticleTranslationsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "ArticleTranslationModel"
                    },
                    "self": {
                        "operation": "ListArticleTranslations",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListArticleTranslations",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListArticleTranslations",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListArticleTranslations",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListArticleTranslations",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CaseRepliesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CaseReplyModel"
                    },
                    "self": {
                        "operation": "ListCaseReplies",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCaseReplies",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCaseReplies",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCaseReplies",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCaseReplies",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CaseNotesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CaseNoteModel"
                    },
                    "self": {
                        "operation": "ListCaseNotes",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCaseNotes",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCaseNotes",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCaseNotes",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCaseNotes",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CompanyCustomersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CustomerModel"
                    },
                    "self": {
                        "operation": "ListCompanyCustomers",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)/customers\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCompanyCustomers",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)/customers\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCompanyCustomers",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)/customers\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCompanyCustomers",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)/customers\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCompanyCustomers",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)/customers\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "CustomerCasesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CaseModel"
                    },
                    "self": {
                        "operation": "ListCustomerCases",
                        "pattern": "#/customers/(?P<customer_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListCustomerCases",
                        "pattern": "#/customers/(?P<customer_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListCustomerCases",
                        "pattern": "#/customers/(?P<customer_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListCustomerCases",
                        "pattern": "#/customers/(?P<customer_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListCustomerCases",
                        "pattern": "#/customers/(?P<customer_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "FilterCasesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CaseModel"
                    },
                    "self": {
                        "operation": "ListFilterCases",
                        "pattern": "#/filters/(?P<filter_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListFilterCases",
                        "pattern": "#/filters/(?P<filter_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListFilterCases",
                        "pattern": "#/filters/(?P<filter_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListFilterCases",
                        "pattern": "#/filters/(?P<filter_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListFilterCases",
                        "pattern": "#/filters/(?P<filter_id>[0-9]+)/cases\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "GroupFiltersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "FilterModel"
                    },
                    "self": {
                        "operation": "ListGroupFilters",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/filters\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListGroupFilters",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/filters\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListGroupFilters",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/filters\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListGroupFilters",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/filters\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListGroupFilters",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/filters\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "GroupUsersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "UserModel"
                    },
                    "self": {
                        "operation": "ListGroupUsers",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/users\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListGroupUsers",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/users\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListGroupUsers",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/users\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListGroupUsers",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/users\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListGroupUsers",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/users\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "MacroActionsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "MacroActionModel"
                    },
                    "self": {
                        "operation": "ListMacroActions",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListMacroActions",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListMacroActions",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListMacroActions",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListMacroActions",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "TopicArticlesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "ArticleModel"
                    },
                    "self": {
                        "operation": "ListTopicArticles",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/articles\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListTopicArticles",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/articles\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListTopicArticles",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/articles\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListTopicArticles",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/articles\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListTopicArticles",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/articles\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "TopicTranslationsPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "TopicTranslationModel"
                    },
                    "self": {
                        "operation": "ListTopicTranslations",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "ListTopicTranslations",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "ListTopicTranslations",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "ListTopicTranslations",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "ListTopicTranslations",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/translations\\??(?P<_query>.*)$#"
                    }
                }
            }
        },




        "SearchArticlesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "ArticleModel"
                    },
                    "self": {
                        "operation": "SearchArticles",
                        "pattern": "#/articles/search\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "SearchArticles",
                        "pattern": "#/articles/search\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "SearchArticles",
                        "pattern": "#/articles/search\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "SearchArticles",
                        "pattern": "#/articles/search\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "SearchArticles",
                        "pattern": "#/articles/search\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "SearchCasesPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CaseModel"
                    },
                    "self": {
                        "operation": "SearchCases",
                        "pattern": "#/cases/search\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "SearchCases",
                        "pattern": "#/cases/search\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "SearchCases",
                        "pattern": "#/cases/search\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "SearchCases",
                        "pattern": "#/cases/search\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "SearchCases",
                        "pattern": "#/cases/search\\??(?P<_query>.*)$#"
                    }
                }
            }
        },
        "SearchCustomersPage": {
            "extends": "page",
            "data": {
                "links": {
                    "entries": {
                        "model": "CustomerModel"
                    },
                    "self": {
                        "operation": "SearchCustomers",
                        "pattern": "#/customers/search\\??(?P<_query>.*)$#"
                    },
                    "first": {
                        "operation": "SearchCustomers",
                        "pattern": "#/customers/search\\??(?P<_query>.*)$#"
                    },
                    "last": {
                        "operation": "SearchCustomers",
                        "pattern": "#/customers/search\\??(?P<_query>.*)$#"
                    },
                    "next": {
                        "operation": "SearchCustomers",
                        "pattern": "#/customers/search\\??(?P<_query>.*)$#"
                    },
                    "previous": {
                        "operation": "SearchCustomers",
                        "pattern": "#/customers/search\\??(?P<_query>.*)$#"
                    }
                }
            }
        },




        "ArticleModel": {
            "type": "object",
            "properties": {
                "subject": {
                    "description": "The subject of the article",
                    "type": "string",
                    "location": "json"
                },
                "in_support_center": {
                    "description": "Whether to display the article in the support center",
                    "type": "boolean",
                    "location": "json"
                },
                "position": {
                    "description": "The position of the article as displayed in the support center",
                    "type": "integer",
                    "location": "json"
                },
                "quickcode": {
                    "description": "Code used by the agent to quickly add article content to a case",
                    "type": "string",
                    "location": "json"
                },
                "keywords": {
                    "description": "Keywords in the article",
                    "type": "string",
                    "location": "json"
                },
                "publish_at": {
                    "description": "Date the article is to be published",
                    "extends": "date.output",
                    "location": "json"
                },
                "created_at": {
                    "description": "Date the article was created",
                    "extends": "date.output",
                    "location": "json"
                },
                "updated_at": {
                    "description": "Date the article was updated",
                    "extends": "date.output",
                    "location": "json"
                },
                "body": {
                    "description": "The content of the article (HTML formatted)",
                    "type": "string",
                    "location": "json"
                },
                "body_email": {
                    "description": "Email-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_email_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_chat": {
                    "description": "Chat-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_chat_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_web_callback": {
                    "description": "Chat-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_web_callback_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_twitter": {
                    "description": "Twitter-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_twitter_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_qna": {
                    "description": "QNA-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_qna_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_phone": {
                    "description": "Phone-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_phone_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_facebook": {
                    "description": "Facebook-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_facebook_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "internal_notes": {
                    "description": "Notes to the agent using the article",
                    "type": "string",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowArticle",
                        "pattern": "#/articles/(?P<id>[0-9]+)$#"
                    },
                    "topic": {
                        "operation": "ShowTopic",
                        "pattern": "#/topics/(?P<id>[0-9]+)$#"
                    },
                    "translations": {
                        "operation": "ListArticleTranslations",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations$#"
                    }
                }
            }
        },
        "ArticleTranslationModel": {
            "type": "object",
            "properties": {
                "locale": {
                    "extends": "locale",
                    "description": "Article translation's locale",
                    "location": "json"
                },
                "subject": {
                    "description": "The subject of the article",
                    "type": "string",
                    "location": "json"
                },
                "body": {
                    "description": "The content of the article (HTML formatted)",
                    "type": "string",
                    "location": "json"
                },
                "body_email": {
                    "description": "Email-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_email_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_chat": {
                    "description": "Chat-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_chat_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_web_callback": {
                    "description": "Chat-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_web_callback_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_twitter": {
                    "description": "Twitter-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_twitter_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_qna": {
                    "description": "QNA-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_qna_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_phone": {
                    "description": "Phone-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_phone_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "body_facebook": {
                    "description": "Facebook-specific body content",
                    "type": "string",
                    "location": "json"
                },
                "body_facebook_auto": {
                    "description": "Whether to just use the content from 'body'",
                    "type": "boolean",
                    "location": "json"
                },
                "publish_at": {
                    "extends": "date.output",
                    "description": "Date the article is to be published",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Date the article was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Date the article was updated",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowArticleTranslation",
                        "pattern": "#/articles/(?P<article_id>[0-9]+)/translations/(?P<locale>[a-zA-Z_-]+)$#"
                    }
                }
            }
        },
        "CaseModel": {
            "type": "object",
            "properties": {
                "external_id": {
                    "description": "Unique external identifier to reference this case to an external system",
                    "location": "json",
                    "type": "string"
                },
                "subject": {
                    "description": "The subject of the case",
                    "location": "json",
                    "type": "string"
                },
                "priority": {
                    "extends": "priority",
                    "description": "Priority of the case (1-10, 1 is lowest priority)",
                    "location": "json"
                },
                "description": {
                    "description": "Description or background information",
                    "location": "json",
                    "type": "string"
                },
                "status": {
                    "extends": "status",
                    "description": "Current state of the case",
                    "location": "json"
                },
                "type": {
                    "extends": "channel",
                    "description": "Channel of the case",
                    "location": "json"
                },
                "labels": {
                    "extends": "labels",
                    "description": "Array of labels associated with this case",
                    "location": "json"
                },
                "custom_fields": {
                    "extends": "custom_fields",
                    "description": "Hash of values for custom fields",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time of creation",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time last updated",
                    "location": "json"
                },
                "active_at": {
                    "extends": "date.output",
                    "description": "Time the case was last active",
                    "location": "json"
                },
                "received_at": {
                    "extends": "date.output",
                    "description": "Time the most recent message was received",
                    "location": "json"
                },
                "locked_until": {
                    "extends": "date.output",
                    "description": "Time at which the lock on this case will expire",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCase",
                        "pattern": "#/cases/(?P<id>[0-9]+)$#"
                    },
                    "message": {
                        "operation": "ShowCaseMessage",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/message$#"
                    },
                    "customer": {
                        "operation": "ShowCustomer",
                        "pattern": "#/customers/(?P<id>[0-9]+)$#"
                    },
                    "assigned_user": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "assigned_group": {
                        "operation": "ShowGroup",
                        "pattern": "#/groups/(?P<id>[0-9]+)$#"
                    },
                    "locked_by": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "replies": {
                        "operation": "ListCaseReplies",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies$#"
                    },
                    "notes": {
                        "operation": "ListCaseNotes",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes$#"
                    }
                }
            }
        },
        "CaseMessageModel": {
            "type": "object",
            "properties": {
                "direction": {
                    "description": "Direction of the message",
                    "type": "string",
                    "enum": ["in", "out"],
                    "location": "json"
                },
                "body": {
                    "description": "Body of the message",
                    "location": "json",
                    "type": "string"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time of creation",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time last updated",
                    "location": "json"
                },
                "status": {
                    "description": "The message's current status",
                    "type": "string",
                    "enum": ["received", "pending", "sent", "failed"],
                    "location": "json"
                },
                "subject": {
                    "description": "The subject of the message",
                    "type": "string",
                    "location": "json"
                },
                "from": {
                    "description": "The from address of the message",
                    "type": "string",
                    "location": "json"
                },
                "to": {
                    "description": "The to address of the message",
                    "type": "string",
                    "location": "json"
                },
                "cc": {
                    "description": "The CC address(es) of the message",
                    "type": "string",
                    "location": "json"
                },
                "bcc": {
                    "description": "The BCC address(es) of the message",
                    "type": "string",
                    "location": "json"
                },
                "type": {
                    "description": "The type of tweet",
                    "type": "string",
                    "enum": ["mention", "dm"],
                    "location": "json"
                },
                "hidden_at": {
                    "extends": "date.output",
                    "description": "Time at which this answer was hidden from the support center",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCaseMessage",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/message$#"
                    },
                    "case": {
                        "operation": "ShowCase",
                        "pattern": "#/cases/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "CaseReplyModel": {
            "type": "object",
            "properties": {
                "direction": {
                    "description": "Direction of the message",
                    "type": "string",
                    "enum": ["in", "out"],
                    "location": "json"
                },
                "body": {
                    "description": "Body of the message",
                    "type": "string",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time of creation",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time last updated",
                    "location": "json"
                },
                "status": {
                    "description": "The message's current status",
                    "type": "string",
                    "enum": ["received", "pending", "sent", "failed"],
                    "location": "json"
                },
                "subject": {
                    "description": "The subject of the message",
                    "type": "string",
                    "location": "json"
                },
                "from": {
                    "description": "The from address of the message",
                    "type": "string",
                    "location": "json"
                },
                "to": {
                    "description": "The to address of the message",
                    "type": "string",
                    "location": "json"
                },
                "cc": {
                    "description": "The CC address(es) of the message",
                    "type": "string",
                    "location": "json"
                },
                "bcc": {
                    "description": "The BCC address(es) of the message",
                    "type": "string",
                    "location": "json"
                },
                "type": {
                    "description": "The type of tweet",
                    "type": "string",
                    "enum": ["mention", "dm"],
                    "location": "json"
                },
                "hidden_at": {
                    "extends": "date.output",
                    "description": "Time at which this answer was hidden from the support center",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCaseReply",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/replies/(?P<reply_id>[0-9]+)$#"
                    },
                    "case": {
                        "operation": "ShowCase",
                        "pattern": "#/cases/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "CaseNoteModel": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "The body of the note",
                    "type": "string",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time of creation",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time last updated",
                    "location": "json"
                },
                "erased_at": {
                    "extends": "date.output",
                    "description": "Time at which an agent erased this note",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCaseNote",
                        "pattern": "#/cases/(?P<case_id>[0-9]+)/notes/(?P<note_id>[0-9]+)$#"
                    },
                    "user": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "erased_by": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "case": {
                        "operation": "ShowCase",
                        "pattern": "#/cases/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "CompanyModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the company",
                    "type": "string",
                    "location": "json"
                },
                "domains": {
                    "description": "Array of top-level domain names for the company",
                    "type": "string",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Date the company was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Date the company was updated",
                    "location": "json"
                },
                "custom_fields": {
                    "description": "Hash of values for custom fields",
                    "type": "object",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCompany",
                        "pattern": "#/companies/(?P<id>[0-9]+)$#"
                    },
                    "customers": {
                        "operation": "ListCompanyCustomers",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)/customers$#"
                    }
                }
            }
        },
        "CustomFieldModel": {
            "properties": {
                "name": {
                    "description": "Custom field name",
                    "type": "string",
                    "location": "json"
                },
                "label": {
                    "description": "Custom field label",
                    "type": "string",
                    "location": "json"
                },
                "type": {
                    "description": "The type of custom field",
                    "type": "string",
                    "enum": ["ticket", "customer"],
                    "location": "json"
                },
                "active": {
                    "description": "Whether or not this custom field is active",
                    "type": "string",
                    "location": "json"
                },
                "data": {
                    "description": "The custom field's data type",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["string", "boolean", "integer", "date.output", "list"]
                        }
                    },
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCustomField",
                        "pattern": "#/custom_fields/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "CustomerModel": {
            "type": "object",
            "properties": {
                "first_name": {
                    "description": "The customer's first name",
                    "type": "string",
                    "location": "json"
                },
                "last_name": {
                    "description": "The customer's last name",
                    "type": "string",
                    "location": "json"
                },
                "company": {
                    "description": "The customer's company",
                    "type": "string",
                    "location": "json"
                },
                "title": {
                    "description": "The customer's title",
                    "type": "string",
                    "location": "json"
                },
                "external_id": {
                    "description": "The customer's unique external identifier to reference this customer in an external system",
                    "type": "string",
                    "location": "json"
                },
                "background": {
                    "description": "Any background information for the customer",
                    "type": "string",
                    "location": "json"
                },
                "language": {
                    "description": "The customer's language code -- NULL unless multi-lingual support is enabled",
                    "type": "string",
                    "location": "json"
                },
                "locked_until": {
                    "description": "Time at which the lock on the customer will expire",
                    "type": "string",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time at which the customer was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time at which the customer was last updated at",
                    "location": "json"
                },
                "emails": {
                    "description": "Array of e-mail objects, each specifying the contact type and value of the e-mail address",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "The type of e-mail address",
                                "type": "string"
                            },
                            "value": {
                                "description": "The e-mail address itself",
                                "type": "string"
                            }
                        }
                    },
                    "location": "json"
                },
                "phone_numbers": {
                    "description": "Array of phone number objects, each specifying the contact type and value of the phone number",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "The type of phone number",
                                "type": "string"
                            },
                            "value": {
                                "description": "The phone number itself",
                                "type": "string"
                            }
                        }
                    },
                    "location": "json"
                },
                "addresses": {
                    "description": "Array of address objects, each specifying the contact type and value of the location",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "The type of address",
                                "type": "string"
                            },
                            "value": {
                                "description": "The address itself",
                                "type": "string"
                            }
                        }
                    },
                    "location": "json"
                },
                "custom_fields": {
                    "description": "Associative array of values for custom fields",
                    "type": "object",
                    "additionalProperties": true,
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowCustomer",
                        "pattern": "#/customers/(?P<id>[0-9]+)$#"
                    },
                    "locked_by": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "cases": {
                        "operation": "ListCustomerCases",
                        "pattern": "#/customers/(?P<customer_id>[0-9]+)/cases#"
                    },
                    "company": {
                        "operation": "ShowCompany",
                        "pattern": "#/companies/(?P<company_id>[0-9]+)$#"
                    }
                }
            }
        },
        "FilterModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the filter",
                    "type": "string",
                    "location": "json"
                },
                "sort": {
                    "description": "What to sort by",
                    "type": "string",
                    "enum": ["priority", "created", "updated", "active"],
                    "location": "json"
                },
                "sort_direction": {
                    "description": "The direction to sort",
                    "type": "string",
                    "enum": ["asc", "desc"],
                    "location": "json"
                },
                "position": {
                    "description": "The position of the filter in the list of filters",
                    "type": "integer",
                    "location": "json"
                },
                "active": {
                    "description": "Whether or not this filter is active",
                    "type": "boolean",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowFilter",
                        "pattern": "#/filters/(?P<id>[0-9]+)$#"
                    },
                    "user": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "group": {
                        "operation": "ShowGroup",
                        "pattern": "#/groups/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "GroupModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the group",
                    "type": "string",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowGroup",
                        "pattern": "#/groups/(?P<id>[0-9]+)$#"
                    },
                    "users": {
                        "operation": "ListGroupUsers",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/users#"
                    },
                    "filters": {
                        "operation": "ListGroupFilters",
                        "pattern": "#/groups/(?P<group_id>[0-9]+)/filters#"
                    }
                }
            }
        },
        "IntegrationUrlModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the integration URL",
                    "type": "string",
                    "location": "json"
                },
                "description": {
                    "description": "An optional description",
                    "type": "string",
                    "location": "json"
                },
                "enabled": {
                    "description": "Whether or not the integration URL is enabled for use",
                    "type": "boolean",
                    "location": "json"
                },
                "markup": {
                    "description": "Liquid code to parse which creates the rendered URL",
                    "type": "string",
                    "location": "json"
                },
                "rendered": {
                    "description": "The rendered URL",
                    "type": "string",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "When the integration URL was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "When the integration URL was last updated",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowIntegrationUrl",
                        "pattern": "#/integration_urls/(?P<id>[0-9]+)$#"
                    },
                    "user": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    },
                    "group": {
                        "operation": "ShowGroup",
                        "pattern": "#/groups/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "MacroModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the macro",
                    "type": "string",
                    "location": "json"
                },
                "description": {
                    "description": "An optional description",
                    "type": "string",
                    "location": "json"
                },
                "enabled": {
                    "description": "Whether or not the macro is enabled for use",
                    "type": "boolean",
                    "location": "json"
                },
                "position": {
                    "description": "Placement in the UI",
                    "type": "integer",
                    "location": "json"
                },
                "folders": {
                    "description": "Array of folders associated with this macro",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowMacro",
                        "pattern": "#/macros/(?P<id>[0-9]+)$#"
                    },
                    "actions": {
                        "operation": "ListMacroActions",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions$#"
                    }
                }
            }
        },
        "MacroActionModel": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of action to be performed",
                    "type": "string",
                    "location": "json"
                },
                "value": {
                    "description": "Value to set for the given type",
                    "type": "string",
                    "location": "json"
                },
                "enabled": {
                    "description": "Whether or not the action is enabled",
                    "type": "boolean",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "When the action was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "When the action was last updated",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowMacroAction",
                        "pattern": "#/macros/(?P<macro_id>[0-9]+)/actions/(?P<action_id>[0-9]+)$#"
                    },
                    "macro": {
                        "operation": "ShowMacro",
                        "pattern": "#/macros/(?P<id>[0-9]+)$#"
                    }
                }
            }
        },
        "TopicModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Subject of the topic in the default locale",
                    "type": "string",
                    "location": "json"
                },
                "description": {
                    "description": "An optional description of the topic",
                    "type": "string",
                    "location": "json"
                },
                "position": {
                    "description": "The topic's position in the admin UI",
                    "type": "integer",
                    "location": "json"
                },
                "allow_questions": {
                    "description": "Whether to allow customers to post questions about this topic in your support center",
                    "type": "boolean",
                    "location": "json"
                },
                "in_support_center": {
                    "description": "Whether to show this topic in the support center",
                    "type": "boolean",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time when the topic was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time when the topic was updated",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowTopic",
                        "pattern": "#/topics/(?P<id>[0-9]+)$#"
                    },
                    "articles": {
                        "operation": "ListTopicArticles",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/articles$#"
                    }
                }
            }
        },
        "TopicTranslationModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The topic's name translated in the locale",
                    "type": "string",
                    "location": "json"
                },
                "locale": {
                    "description": "Language code of the translation",
                    "type": "string",
                    "location": "json"
                },
                "created_at": {
                    "extends": "date.output",
                    "description": "Time when the translation was created",
                    "location": "json"
                },
                "updated_at": {
                    "extends": "date.output",
                    "description": "Time when the translation was last updated",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowTopicTranslation",
                        "pattern": "#/topics/(?P<topic_id>[0-9]+)/translations/(?P<locale>[a-zA-Z_-]+)$#"
                    }
                }
            }
        },
        "UserModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the user",
                    "type": "string",
                    "location": "json"
                },
                "public_name": {
                    "description": "Public facing name of the user",
                    "type": "string",
                    "location": "json"
                },
                "email": {
                    "description": "User's email",
                    "type": "string",
                    "location": "json"
                },
                "level": {
                    "description": "User's permission level",
                    "type": "string",
                    "location": "json"
                }
            },
            "data": {
                "links": {
                    "self": {
                        "operation": "ShowUser",
                        "pattern": "#/users/(?P<id>[0-9]+)$#"
                    }
                }
            }
        }
    }
}
